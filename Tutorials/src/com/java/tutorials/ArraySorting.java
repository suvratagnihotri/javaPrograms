package com.java.tutorials;

import java.util.Arrays;

public class ArraySorting {

    public static int[] selectionSort(int[] array){
        int [] tempArray = array.clone();
        int temp = 0;
        for(int i=0; i<tempArray.length; i++){
            for(int j = i; j<tempArray.length; j++){
                if(tempArray[i]>tempArray[j]){
                    temp = tempArray[i];
                    tempArray[i] = tempArray[j];
                    tempArray[j] = temp;
                }
            }
        }
        return tempArray;

    }

    public static int[] bubbleSort(int[] array){
        int [] tempArray = array.clone();
        int temp = 0;
        for(int i = 0; i < tempArray.length - 1; i++){
            for(int j = 0; j<tempArray.length - i - 1; j++){
                if(tempArray[j]>tempArray[j+1]){
                    temp = tempArray[j];
                    tempArray[j] = tempArray[j+1];
                    tempArray[j+1] = temp;
                }
            }

        }
        return tempArray;

    }


    public static int[] insertionSort(int[] array){
        int [] tempArray = array.clone();
        int key = 0;
        int j = 0;
        for(int i = 1; i<tempArray.length; ++i){
            key = tempArray[i];
            j = i -1;
            while (j>=0 && tempArray[j]>key) {
                tempArray[j+1] = tempArray[j];
                j --;
            }
            tempArray[j + 1] = key;
        }
        return tempArray;
    }
    public static void main(String[] args) {
        int [] array = {23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112,23,43,12,5,47,456,234,1,5,0,23,45,89,2,25,34,12,111,222,333,555,55,66,11,98,45,66,77,99,0,9876,34,232,222,212,232,343,454,565,767,787,898,9,989,343,443,334,223,332,112,221,776,66,7776,667,889,998,1009,2008,3007,4005,6006,5005,4004,3003,1001,23,2003,3004,5006,7008,9001,1002,1112};
        System.out.println(Arrays.toString(array));
        long initialT = System.currentTimeMillis();
        System.out.println("Sorting using selection sort ----- "+ Arrays.toString(selectionSort(array))); 
        long finalT1 = System.currentTimeMillis();
        System.out.println("Total time taken by Selection sort in miliseconds is :"+ (finalT1-initialT));
        System.out.println(Arrays.toString(array));
        System.out.println("Sorting using Bubble sort ----- "+ Arrays.toString(bubbleSort(array)));
        long finalT2 = System.currentTimeMillis();
        System.out.println("Total time taken by Selection sort in miliseconds is :"+ (finalT2-finalT1));
        System.out.println(Arrays.toString(array));
        System.out.println("Sorting using insertion Sort ------"+ Arrays.toString(insertionSort(array)));
        long finalT3 = System.currentTimeMillis();
        System.out.println("Total time taken by Insertion sort in miliseconds is :"+ (finalT3-finalT2));
        


    }
}






